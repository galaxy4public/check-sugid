#!/bin/sh
set -eu -o pipefail

PMGR=
PMGR_ACTION_FILE=
PMGR_SELECTOR=
for tool in yum dnf
do
	if type -p "$tool" >/dev/null 2>/dev/null; then
		PMGR="$tool"
	fi
done

case "${tool##*/}" in
	dnf)
		PMGR_ACTION_FILE=/etc/dnf/plugins/post-transaction-actions.d/check-sugid.action
		PMGR_SELECTOR='in'
		;;
	yum)
		PMGR_ACTION_FILE="$PMGR_ACTION_FILE"
		PMGR_SELECTOR='(install|update)'
		;;
	*)
		echo "$0: ERROR: cannot determine the package manager, internal error"
		exit 1
esac

# The following block allows to use this script as a yum/dnf plugin when there were
# packages installed and/or updated.
if [ -n "${1:-}" ]; then
	unset RUN
	for arg in "$@"; do
		case "$arg" in
			install|update|upgrade|reinstall|downgrade)
					RUN=1
					;;
			remove)
					;;
			help)
					cat >&2 <<-__EOF__
						Usage: $0 [install|update|remove|help]

						This script scans the system for SUID/SGID binaries.  The optional arguments
						are used when the script is executed as a ${PMGR##*/} plugin and should not be used
						in the interactive sessions.

__EOF__
					exit 1
					;;
			*)
					echo "$0: ERROR: unknown argument '$arg', only install/update/upgrade/reinstall/downgrade/remove/help are supported"
					exit 1
		esac
	done

	[ -n "$RUN" ] || exit 0
fi

if ! TMPFILE=$(mktemp -t .check-sugid.XXXXXXXXXX); then
	echo "$0: ERROR: failed to create a temporary file" >&2
	exit 1
fi

trap 'rc=$?; trap - EXIT; rm -f -- $TMPFILE; exit $rc' EXIT HUP INT QUIT ABRT KILL SEGV TERM

# Determine the locally mounted filesystems
if [ -z "${FS_LIST:-}" ]; then
	sed -n '/^[[:space:]]*nodev[[:space:]]/!{s/^[[:space:]]\+/^/;s/[[:space:]]*$/\\s/};T;p' /proc/filesystems > "$TMPFILE" ||:
	FS_LIST=$(sed -n 's/^\([[:space:]]*[^[:space:]]\+\)[[:space:]]\([^[:space:]]\+\)[[:space:]]\([^[:space:]]\+\).*/\3 \2/;T;p' /proc/mounts | grep -f "$TMPFILE" | cut -f2 -d ' ') ||:
	FS_LIST="${FS_LIST:-/}"
fi

> "$TMPFILE"
test -s "$PMGR_ACTION_FILE" && \
	grep -E '^#?/.*:'"$PMGR_SELECTOR"':' "$PMGR_ACTION_FILE" \
		| grep setcap | cut -f1 -d: | cut -f2 -d'#' | LC_ALL=C sort | uniq \
		| sed '/^$/d' > "$TMPFILE" ||:

CAP_LIST=$(find $FS_LIST -xdev -type f -perm /0111 -print0 \
		| grep -zZ -F -v -f "$TMPFILE" \
		| xargs -0 -i /bin/sh -c 'CAP=$(getcap '"'{}'"'); [ "$CAP" != "${CAP/=}" ] \
				&& stat "--printf=# UNK: %A/%a %U/%G (${CAP##* = }) %n\0" '"'{}'" \
                | sed -z '/^[[:space:]]*$/d;s/\n/\\n/g;s/$/\n/' | tr -d '\0' \
		||: \
)

> "$TMPFILE"
test -s "$PMGR_ACTION_FILE" && \
	grep -E '^#/.*:'"$PMGR_SELECTOR"':' "$PMGR_ACTION_FILE" \
		| cut -f1 -d: | cut -f2 -d'#' | LC_ALL=C sort | uniq > "$TMPFILE" ||:
printf '%s\n' "$CAP_LIST" | cut -f6- -d' ' | LC_ALL=C sort | uniq \
	| sed '/^$/d' >> "$TMPFILE" ||:
LIST=$(find $FS_LIST -xdev -type f -perm /6000 -printf "# UNK: %M/%m %u/%g () %p\0" 2>/dev/null \
		| sed -z '/^[[:space:]]*$/d;s/\n/\\n/g;s/$/\n/' | tr -d '\0' \
		| LC_ALL=C sort -k6 -t' ' | grep -F -v -f "$TMPFILE" \
		||: \
)
LIST=$(printf '%s\n%s\n' "$CAP_LIST" "$LIST" | LC_ALL=C sort -k6 -t' ')

if [ -n "$LIST" ]; then
	cat <<-__EOF__
		# New setuid/setgid/capability binaries were found!
		# ===
		# Please review the following file list and add the corresponding entries to
		# the "$PMGR_ACTION_FILE" file.
		# The output is already formatted in such a way that you can simply
		# copy-and-paste entries to the destination file.  Please note that by
		# default all entries are commented out.  The easiest way to enforce the
		# rules defined in the check-suid.action file is to execute the following
		# command once the file is updated:
		#
		# grep ':$PMGR_SELECTOR:' "$PMGR_ACTION_FILE" | grep -vE '^\s*(#|\*:)' | cut -f3- -d':' | sort -u | sh -x
		#
		# Note that on package updates/install the rules will be enforced by the
		# package management software automatically.
		#
		# (if you wish to generate the list presented below again you can manually
		# execute $0):
		#==============================================================================

__EOF__
	printf '%s\n' "$LIST" | \
		while read -r LINE; do
			[ -z "$LINE" ] && continue || :
			FILENAME=$(printf '%s' "$LINE" | cut -f6- -d' ')
			HEADER=$(printf '%s' "$LINE" | cut -f-5 -d' ')
			CAPS=$(printf '%s' "$HEADER" | cut -f5 -d' ' | sed 's,^(,,;s,[[:space:]]*)$,,')
			[ -z "$CAPS" ] && HEADER="${HEADER% ()}" ||:
			PERMS=$(printf '%s' "$HEADER" | cut -f2 -d/ | cut -f1 -d' ')
			for selector in ${PMGR_SELECTOR//(|)/ }; do
				printf '%s\n#%s:%s:chmod -v %d '"'%s'" "$HEADER" "$FILENAME" "$selector" "$PERMS" "${FILENAME//\\n/\'\$\'\\n\'\'}"
				[ -n "${CAPS:-}" ] && printf '; setcap '"'%s'"' '"'%s'" "$CAPS" "${FILENAME//\\n/\'\$\'\\n\'\'}" ||:
			done
			printf '\n\n'
		    done
	  exit 1
fi
